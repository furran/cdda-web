name: Build and Deploy CDDA Web

on:
    push:
        branches: [main]
    schedule:
        - cron: "0 0 * * *" # Daily build
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout this repo
              uses: actions/checkout@v4

            - name: Install Dependencies
              run: |
                  sudo apt update
                  sudo apt install -y git cmake python3-pip pkg-config zlib1g-dev libfreetype6-dev

            - name: Clone CDDA source
              run: |
                  git clone --depth 1 https://github.com/CleverRaven/Cataclysm-DDA.git cdda
                  cd cdda
                  git submodule update --init --recursive

            - name: Set up Emscripten
              run: |
                  git clone https://github.com/emscripten-core/emsdk.git
                  cd emsdk
                  ./emsdk install latest
                  ./emsdk activate latest

            - name: Build CDDA for Web
              run: |
                  source emsdk/emsdk_env.sh
                  embuilder build zlib
                  embuilder build sdl2_image
                  embuilder build sdl2_ttf

                  cd cdda

                  echo "int main() { return 0; }" | emcc -x c - -sUSE_SDL=2 -o dummy.js
                  rm dummy.js dummy.wasm

                  export SDL2_INCLUDE_DIR="$EMSDK/upstream/emscripten/cache/sysroot/include/SDL2"
                  export SDL2_LIBRARY=SDL2

                  make NATIVE=emscripten RELEASE=1 TILES=1 CURSES=0 SOUND=0 LOCALIZE=0 USE_HOME_DIR=0 USE_XDG_DIR=0 BACKTRACE=0 SOUND=0 LOCALIZE=0 LINTJSON=0 TESTS=0
            - name: Prepare output for GitHub Pages
              run: |
                  mkdir -p site
                  cp cdda/build/cataclysm-tiles.html site/index.html
                  cp cdda/build/cataclysm-tiles.js site/
                  cp cdda/build/cataclysm-tiles.wasm site/

            - name: Upload GitHub Pages artifact
              uses: actions/upload-artifact@v4
              with:
                  path: ./site

    deploy:
        needs: build
        runs-on: ubuntu-latest
        permissions:
            pages: write
            id-token: write

        steps:
            - name: Deploy to GitHub Pages
              uses: actions/deploy-pages@v4
